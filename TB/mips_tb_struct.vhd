-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY MIPS_tb IS
-- Declarations

END MIPS_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

LIBRARY work;

ARCHITECTURE struct OF MIPS_tb IS

   -- Architecture declarations

   -- Internal signal declarations
--	signal		reset     							: STD_LOGIC; fot test GPIO !!!!!!!!!
	signal		clock								: STD_LOGIC; 
			-- Output important signals to pins for easy display in Simulator
	signal		PC									: STD_LOGIC_VECTOR( 9 DOWNTO 0 );
	signal		Instruction_out						: STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal		LEDS						 		: STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	signal		HEX_0, HEX_1, HEX_2, HEX_3, HEX_4,HEX_5 : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
	signal		SW_IN 								: STD_LOGIC_VECTOR( 7 DOWNTO 0 );
	signal		KEY_0, KEY_1, KEY_2, KEY_3 			: STD_LOGIC;
	signal  	PWMout								: STD_LOGIC;
	constant	sim									: integer:=8;



   -- Component Declarations
	Component MCU
		GENERIC(sim					:integer:=8); ---8:Modelsim, 10:Quartus
		PORT( 
--			reset     						: IN 	STD_LOGIC; for test GPIO !!!!!!!!!
			clock								: IN 	STD_LOGIC; 
			-- Output important signals to pins for easy display in Simulator
			PC									: OUT  STD_LOGIC_VECTOR( 9 DOWNTO 0 );
			Instruction_out						: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
			LEDS						 		: OUT 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
			HEX_0, HEX_1, HEX_2, HEX_3, HEX_4,HEX_5 : OUT 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
			SW_IN 								: IN 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
			KEY_0, KEY_1, KEY_2, KEY_3 			: IN 	STD_LOGIC;
			PWMout								: OUT   STD_LOGIC);
	END Component;
	COMPONENT MIPS_tester
	   PORT (
	--			reset     							: OUT 	STD_LOGIC; for test GPIO !!!!!!!!!
				clock								: OUT 	STD_LOGIC; 
				-- Output important signals to pins for easy display in Simulator
				PC									: IN  STD_LOGIC_VECTOR( 9 DOWNTO 0 );
				Instruction_out						: IN 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
				LEDS						 		: IN 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
				HEX_0, HEX_1, HEX_2, HEX_3, HEX_4,HEX_5 : IN 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
				SW_IN 								: OUT 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
				KEY_0, KEY_1, KEY_2, KEY_3 			: OUT 	STD_LOGIC;
				PWMout								: IN   STD_LOGIC			
	   );
	END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : MCU USE ENTITY work.MCU;
   FOR ALL : MIPS_tester USE ENTITY work.mips_tester;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : MCU
	  GENERIC MAP(sim		=> sim ) ---8:Modelsim, 10:Quartus
      PORT MAP (
--         reset           => reset,  for test GPIO !!!!!!!!!
         clock           => clock,
         PC  => PC,
         Instruction_out => Instruction_out,
         LEDS => LEDS,
         HEX_0  => HEX_0,
         HEX_1 => HEX_1,
         HEX_2      => HEX_2,
         HEX_3        => HEX_3,
         HEX_4    => HEX_4,
         HEX_5    => HEX_5,
		 SW_IN   => SW_IN,
		 KEY_0  => KEY_0,
		 KEY_1  => KEY_1,
		 KEY_2  => KEY_2,
		 KEY_3  => KEY_3,
		 PWMout => PWMout
      );
   U_1 : MIPS_tester
      PORT MAP (
--         reset           => reset, for test GPIO !!!!!!!!!
         clock           => clock,
         PC  => PC,
         Instruction_out => Instruction_out,
         LEDS => LEDS,
         HEX_0  => HEX_0,
         HEX_1 => HEX_1,
         HEX_2      => HEX_2,
         HEX_3        => HEX_3,
         HEX_4    => HEX_4,
         HEX_5    => HEX_5,
		 SW_IN   => SW_IN,
		 KEY_0  => KEY_0,
		 KEY_1  => KEY_1,
		 KEY_2  => KEY_2,
		 KEY_3  => KEY_3,
		 PWMout => PWMout
      );

END struct;

